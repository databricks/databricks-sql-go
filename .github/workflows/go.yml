name: Go

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.51
  build-and-test:
    name: Test and Build
    strategy:
      matrix:
        go-version: [1.20.x]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v3

      - name: Set up Go Toolchain
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

      - name: Cache Go artifacts
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Get dependencies
        run: |
          if ! command -v make &> /dev/null ; then
            echo "Installing make"
            apt-get update
            apt-get install -y make
          fi
          if ! command -v git &> /dev/null ; then
            echo "Installing git"
            apt-get update
            apt-get install -y git
          fi
          go get -v -t -d ./...

      - name: Test
        run: make test
        env:
          CGO_ENABLED: 0

      - name: Test-Race
        run: make test-race

      - name: Build
        run: make linux
